openapi: 3.0.0
info:
  title: todoList
  description: todoList app API
  version: 0.1.9

servers:
  - url: https://todo-backend-app.up.railway.app/api
    description: Production server
  - url: http://localhost:3000/api
    description: Local server

paths:
  /todoList:
    get:
      tags:
        - todoList
      summary: Get all todo items
      responses:
        '200':
          description: Successfully fetched
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todo'

  /sendTodo:
    post:
      tags:
        - Todo
      summary: Add a new todo
      requestBody:
        description: Todo object to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Todo'
      responses:
        '200':
          description: Todo added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
  
  /updateTodo/{id}:
    put:
      tags:
        - update todoes
      summary: Update the status of a todo item
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The ID of the todo item to update
      responses:
        '200':
          description: Successful update
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
                  todo:
                    $ref: '#/components/schemas/Todo'
        '404':
          description: Todo not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message

  /deleteTodo/{id}:
    delete:
      tags:
        - todo
      summary: Deletes a todo item
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Todo deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /deletedInactive:
    delete:
      tags:
        - delete todoes
      summary: Delete todos with status false
      description: Deletes all todos with status set to false.
      responses:
        '201':
          description: Todo deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Todo deleted successfully
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message

components:
  schemas:
    Todo:
      type: object
      properties:
        name:
          type: string
          description: Name of the todo item
        status:
          type: boolean
          description: Status of the todo item (true for completed, false for pending)
      required:
        - name
